/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaces;

import clases.Conection_BD;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListModel;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author crysi
 */
public class cambioResguardatario extends javax.swing.JFrame {

    /**
     * Creates new form cambioResguardatario
     */
    public cambioResguardatario() {
        initComponents();
        cargarEmpleado();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/logoa.png")).getImage());
        //cerrar();
    }

    public void cargarEmpleado() {
        try {
            Connection cn = Conection_BD.conexion_bd();
            PreparedStatement pst = cn.prepareStatement("SELECT nombre_empleado, clave_servidor_publico FROM empleados WHERE lower(nombre_empleado) not in ('almacen', 'transferencia')");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                barra_empleado1.addItem(rs.getObject(1).toString() + ": " + rs.getObject(2).toString());
            }
            cn.close();

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void cargarEmpleado(String id) {
        try {
            barra_empleado2.removeAllItems();
            Connection cn = Conection_BD.conexion_bd();
            PreparedStatement pst = cn.prepareStatement("SELECT nombre_empleado, clave_servidor_publico FROM empleados WHERE lower(clave_servidor_publico) not in ('almacen', 'transferencia','" + id + "')");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                barra_empleado2.addItem(rs.getObject(1).toString() + ": " + rs.getObject(2).toString());
            }
            cn.close();

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        barra_empleado1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        barra_empleado2 = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boton_seleccionar = new javax.swing.JButton();
        boton_confirmar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bienes = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        barra_bienes_seleccionados = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        boton_buscar = new javax.swing.JButton();

        jCheckBox5.setText("Bien1");

        jCheckBox6.setText("Bien2");

        jCheckBox7.setText("Bien3");

        jCheckBox8.setText("Bien4");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cambio de Resguardatario");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Empleado 1");

        barra_empleado1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        barra_empleado1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                barra_empleado1ItemStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Empleado 2");

        barra_empleado2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Empleado de origen");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Empleado destino");

        boton_seleccionar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        boton_seleccionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/seleccion_30.png"))); // NOI18N
        boton_seleccionar.setText("Seleccionar bien");
        boton_seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_seleccionarActionPerformed(evt);
            }
        });

        boton_confirmar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        boton_confirmar.setText("Confirmar cambio de Resguardatario");
        boton_confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_confirmarActionPerformed(evt);
            }
        });

        bienes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(bienes);

        barra_bienes_seleccionados.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jScrollPane3.setViewportView(barra_bienes_seleccionados);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Bienes Seleccionados");

        boton_buscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        boton_buscar.setText("Regresar");
        boton_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(barra_empleado1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(barra_empleado2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(305, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(boton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 801, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(boton_seleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(69, 69, 69)
                            .addComponent(jLabel5))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(boton_confirmar))
                    .addGap(0, 18, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(boton_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barra_empleado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(barra_empleado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap(33, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(162, Short.MAX_VALUE)
                    .addComponent(boton_seleccionar)
                    .addGap(34, 34, 34)
                    .addComponent(jLabel5)
                    .addGap(6, 6, 6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(45, 45, 45)
                    .addComponent(boton_confirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 40, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void boton_confirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_confirmarActionPerformed
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        Date fecha_1 = new Date();
        String fecha = "";
        fecha = f.format(fecha_1);
        if (lista_bienes.size() > 0) {
            Connection cn = Conection_BD.conexion_bd();
            String id_empleado = obtenerIDEmpleado2();
            try {
                for (String bien : lista_bienes) {
                    PreparedStatement pst = cn.prepareStatement("UPDATE bienes SET id_empleado = " + id_empleado + " WHERE id_bien = " + bien);
                    pst.executeUpdate();
                    
                    pst = cn.prepareStatement("insert into movimientos (`tipo_movimiento`, `fecha`, `accion`, `tabla_afectada`) values (?,?,?,?)");
                    pst.setString(1, "Cambio de reguardatario");
                    pst.setString(2, fecha);
                    pst.setString(3, "Cambio resguardatario: "+id_empleado);
                    pst.setString(4, "Empleados Y bienes");
                    pst.executeUpdate();
                }

                cn.close();
                JOptionPane.showMessageDialog(null, "Cambio realizado con exito!");
                cambioResguardatario mb = new cambioResguardatario();
                this.dispose();
                mb.setVisible(true);

            } catch (Exception e) {
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona 1 o mas bienes");
        }

    }//GEN-LAST:event_boton_confirmarActionPerformed

    public String obtenerIDEmpleado2() {
        String id = "";
        String empleado2 = barra_empleado2.getSelectedItem().toString();
        StringTokenizer token = new StringTokenizer(empleado2, ":");
        while (token.hasMoreElements()) {
            empleado2 = token.nextToken().toString().trim();
        }
        //System.out.println("Empleado2: "+empleado2);
        try {
            Connection cn = Conection_BD.conexion_bd();
            PreparedStatement pst = cn.prepareStatement("Select id_empleado from empleados where clave_servidor_publico = '" + empleado2 + "'");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                id = rs.getObject(1).toString();

            }
            System.out.println("El id que se recibe es: " + id);
        } catch (Exception e) {
            System.out.println(e);
        }

        return id;
    }

    ArrayList<String> lista_bienes = new ArrayList<String>();

    private void boton_seleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_seleccionarActionPerformed

        barra_empleado1.disable();
        String id = "";
        int selection = bienes.getSelectedRow();
        String bien = "";
        if (selection == (-1)) {
            JOptionPane.showMessageDialog(null, "Primero debes seleccionar un bien para cambiar de resguardatario");
        } else {
            id = bienes.getValueAt(selection, 0).toString();
            bien = bienes.getValueAt(selection, 1).toString() + " " + bienes.getValueAt(selection, 2).toString();;
            if (!id.equals("") && !duplicados(lista_bienes, id)) {
                lista_bienes.add(id);
                mostrarBienesSeleccionados(bien);
            }
        }


    }//GEN-LAST:event_boton_seleccionarActionPerformed

    public boolean duplicados(ArrayList<String> lista_bienes, String id) {

        for (String item : lista_bienes) {
            if (item.equals(id)) {
                JOptionPane.showMessageDialog(null, "El bien ya ha sido seleccionado");
                return true;
            }
        }
        return false;
    }

    DefaultListModel modelo = new DefaultListModel();

    public void mostrarBienesSeleccionados(String bien) {

        modelo.addElement(bien);
        barra_bienes_seleccionados.setModel(modelo);
    }


    private void barra_empleado1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_barra_empleado1ItemStateChanged

        String empleado = barra_empleado1.getSelectedItem().toString().toLowerCase();
        String id = "";
        //String datos_empleado[]=new String[2];
        StringTokenizer token = new StringTokenizer(empleado, ":");
        while (token.hasMoreElements()) {
            empleado = token.nextToken().toString().trim();
        }
        System.out.println("Empleado: " + empleado);
        try {
            Connection cn = Conection_BD.conexion_bd();
            PreparedStatement pst = cn.prepareStatement("select id_empleado from empleados where clave_servidor_publico = '" + empleado + "'");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                id = rs.getObject(1).toString();
                System.out.println("ID = " + id);
            }
            cn.close();
        } catch (Exception e) {
            System.out.println(e);
        }

        cargarEmpleado(empleado.trim());
        mostrarBienes(id);


    }//GEN-LAST:event_barra_empleado1ItemStateChanged

    private void boton_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_buscarActionPerformed

        menuBienesMuebles p = new menuBienesMuebles();
        p.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_boton_buscarActionPerformed

    public void mostrarBienes(String id) {
        DefaultTableModel modelo_tabla = new DefaultTableModel();
        DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer();
        cellRenderer.setBackground(new Color(51, 102, 255));

        try {
            Connection cn = Conection_BD.conexion_bd();
            PreparedStatement pst = cn.prepareStatement("select id_bien, "
                    + "no_inventario, "
                    + "descripcion_bien, "
                    + "tipo_sico_sareco, "
                    + "valor_estimado, "
                    + "estatus "
                    + "from bienes "
                    + "where id_empleado = " + id + " and (estatus ='ACTIVO' OR estatus ='FUNCIONA')");
            ResultSet rs = pst.executeQuery();

            bienes = new JTable(modelo_tabla);
            //para no poder mover las columnas
            bienes.getTableHeader().setReorderingAllowed(false);
            //tabla.getTableHeader().setFont(new Font("Arial", Font.BOLD, 20));

            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
            tcr.setHorizontalAlignment(SwingConstants.CENTER);
            //tamaño de alto de la tabla 
            bienes.setRowHeight(30);
            //color de fondo
            bienes.setBackground(new Color(156, 197, 152));
            //genera la fuente para los datos de la tabla
            bienes.setFont(new Font("Arial", Font.PLAIN, 16));
            //color del borde de la tabla
            bienes.setGridColor(new Color(255, 255, 255));
            //tabla.setRowMargin(10);
            //poner bordes
            //tabla_equipos.setShowGrid(true);
            bienes.setShowHorizontalLines(true);
            //tabla_equipos.setShowVerticalLines(true);
            //para que la tabla tenga un scroll
            jScrollPane1.setViewportView(bienes);

            modelo_tabla.addColumn("Id");
            modelo_tabla.addColumn("No Inventario");
            modelo_tabla.addColumn("Descripcion");
            modelo_tabla.addColumn("Tipo");
            modelo_tabla.addColumn("Valor estimado");
            //bienes.setAutoResizeMode(AUTO_RESIZE_OFF);
            bienes.getColumnModel().getColumn(0).setPreferredWidth(60);
            bienes.getColumnModel().getColumn(1).setPreferredWidth(100);
            bienes.getColumnModel().getColumn(2).setPreferredWidth(200);
            bienes.getColumnModel().getColumn(3).setPreferredWidth(100);

            bienes.getColumnModel().getColumn(0).setResizable(false);
            bienes.getColumnModel().getColumn(1).setResizable(false);
            bienes.getColumnModel().getColumn(2).setResizable(false);
            bienes.getColumnModel().getColumn(3).setResizable(false);

            //modelo_bienes.
            while (rs.next()) {
                Object[] fila = new Object[5];//por las columnas que tengo
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i + 1);

                    //centra el contenido de la bienes
                    bienes.getColumnModel().getColumn(i).setCellRenderer(tcr);
                    //cambiamos el color del emcabezado y centrado
                    TableColumn column = bienes.getTableHeader().getColumnModel().getColumn(i);
                    column.setHeaderRenderer(cellRenderer);

                    cellRenderer.setFont(new Font("Arial", Font.BOLD, 11));
                    cellRenderer.setHorizontalAlignment(cellRenderer.CENTER);
                    cellRenderer.setForeground(Color.white);

                }

                bienes.getTableHeader().setBackground(new Color(255, 0, 0));
                modelo_tabla.addRow(fila);
                ((DefaultTableCellRenderer) bienes.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

            }

            cn.close();
        } catch (Exception e) {
            System.out.println("Error al llenar bienes de equipos: " + e);
            //JOptionPane.showMessageDialog(Componente, mensaje, título, tipo de mensaje, icono);
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cambioResguardatario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cambioResguardatario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cambioResguardatario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cambioResguardatario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(bajasBienesMuebles_tabla.class.getName()).log(Level.SEVERE, null, ex);
                }
                new cambioResguardatario().setVisible(true);
            }
        });
    }

    public void cerrar() {
        try {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    confirmarSalida();
                }
            });
            //this.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void confirmarSalida() {
        int valor = JOptionPane.showConfirmDialog(this, "¿Seguro de cerrar esta ventana?", "ADVERTENCIA", JOptionPane.YES_NO_OPTION);
        if (valor == JOptionPane.YES_OPTION) {
            menuBienesMuebles p = new menuBienesMuebles();
            p.setVisible(true);
            this.dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> barra_bienes_seleccionados;
    private javax.swing.JComboBox<String> barra_empleado1;
    private javax.swing.JComboBox<String> barra_empleado2;
    private javax.swing.JTable bienes;
    private javax.swing.JButton boton_buscar;
    private javax.swing.JButton boton_confirmar;
    private javax.swing.JButton boton_seleccionar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
